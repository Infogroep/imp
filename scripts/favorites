#!/usr/bin/env ruby

puts 'application/json'

require_relative '../util/favorites/favorites'
require_relative '../util/routing/routing'


module FavoriteOperations
	include Favorites::Favorites

	def self.enqueue(id)
		f = Favorite.find id
		Process.wait spawn("util/favorites/types/#{f.type}", *f.options)
	end

	def self.list
		puts JSON.generate(Favorite.select("id,name,user,is_public,keywords").first.attributes)
	end

	def self.post
		Favorite.create!(JSON.parse(STDIN.gets))
	end

	def self.search
		query = JSON.parse(STDIN.gets)
		f = Favorite
		query.gets
	end

	def self.patch(options)
		f = find_favorite(options)

		raise "Couldn't find favorite" unless f

		f.update!(JSON.parse(STDIN.gets))
	end
end

Routing::route do |r|
	r.enqueue [:id] { |b| FavoriteOperations::enqueue b[:id] }
	r.get { FavoriteOperations::list }
	r.post { FavoriteOperations::post }
end
