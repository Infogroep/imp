#!/bin/bash

buffer_size=100000

cacheid="$(util/cache reserve_file)"         # Reserve a cache file.
file="tmp/cache/$cacheid"                    # Turn the cache id into the file name.
id=""                                        # This will hold our media ID.
reachedend=0                                 # To prevent a locked wait loop.

{
	# Wait until we have at least $buffer_size data before we queue the file.
	while (( $(stat -c %s "$file") < $buffer_size && $reachedend == 0 )); do
		sleep 0.5
	done

	# Queue the file.
	id="$(util/player enqueue --attach-file "$cacheid" "$@" "$file")"
} & # This block is forked

# Write stdin to a file.
cat > "$file"

# If our fork already enqueued the file, we will just trigger the
# fingerprinting process again to make sure it has all the info.
if [[ ! -z "$id" ]]; then
	util/player reevaluate --attach-file "$cacheid" "$@" "$id"
fi

# Notify our fork that we received the entire file if it
# got stuck on a file smaller than $buffer_size.
# This will also queue our file.
reachedend=1

