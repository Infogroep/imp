#!/usr/bin/env ruby
require 'drb/drb'
require 'optparse'
require_relative 'routing/routing'

DRb.start_service

player = DRbObject.new_with_uri("drbunix:/var/tmp/imp-player.socket")

info = {}
options = {
	attached_files: []
}

info["user"] = ENV["IMP_REQUESTING_USER"] if ENV["IMP_REQUESTING_USER"]

OptionParser.new do |opts|
	# Concerning enqueuing of files
	opts.on("--author AUTHOR") do |author|
		info["author"] = author
	end

	opts.on("--title TITLE") do |title|
		info["title"] = title
	end

	opts.on("--user USER") do |user|
		info["user"] = user
	end

	opts.on("--duration DURATION") do |duration|
		info["duration"] = duration
	end

	opts.on("--downloadprogress PERCENTAGE") do |percentage|
		info["downloadprogress"] = percentage
	end

	opts.on("-t","--tag TAG",/[A-Za-z]+=.*/m) do |tagspec|
		m = /([A-Za-z]+)=(.*)/.match(tagspec)
		info[m[1].downcase] = m[2]
	end

	opts.on("--[no-]fingerprint") do |f|
		options[:fingerprint] = f
	end

	opts.on("--attach-file FILE") do |file|
		options[:attached_files].push(file)
	end
end.parse!

Routing::route ARGV do |r|
	r.play { player.play_current }
	r.stop { player.stop }
	r.pause { player.pause }
	r.is_playing { puts player.is_playing? }
	r.get_title { puts player.get_title }
	r.get_time { puts player.get_time }
	r.get_length { puts player.get_length }
	r.seek [:seconds] { |b| player.seek b[:seconds] }	
	r.volume [:x] { |b| player.volume b[:x] }
	r.next { player.next }
	r.flush { player.flush }
	r.magic_shuffle { |x| player.magic_shuffle b[:x] }
	r.shuffle {	player.shuffle }
	r.dequeue [:item] { |b|	player.dequeue b[:item] }
	r.playlist { puts player.playlist }	
	r.history { puts player.history }
	r.previous { player.previous }
	r.replay { player.replay }
	r.enqueue [:item] { |b| puts player.enqueue b[:item], info, options }
	r.reevaluate [:item] { |b| player.reevaluate b[:item], info, options }
	r.attach_file [:item, :file] { |b| player.attach_files b[:item], [b[:file]] }
	r.find_media [:id] { |b| puts player.find_media b[:id] }
	r.to_front [:id] { |b| player.to_front b[:id] }
end
