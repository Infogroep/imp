#!/usr/bin/env ruby

require 'securerandom'
require_relative 'routing/routing'

##
# Provides methods to manipulate the on-disk media cache
module Cache
	##
	# Create a new file with a unique name and returns its name
	def self.reserve_file
		uuid = SecureRandom.uuid
		`touch tmp/cache/#{uuid}`
		uuid
	end

	##
	# Clears the entire cache
	def self.cleanup
		`rm tmp/cache/*`
	end

	##
	# Remove a specific +file+ from the cache
	def self.remove_files files
		files.each do |file|
			if not file =~ /^[0-9a-f-]+$/
				STDERR.puts 'Attempt to pass disallowed file ID'
				exit 1
			end
		end
		puts files
		Process.wait spawn 'rm', *files.map { |file| "tmp/cache/#{file}" }
	end
end

if ARGV[0] == "remove_files"
	Cache::remove_files ARGV.drop(1)
	exit 0
end

Routing::route ARGV do |r|
	r.reserve_file { puts Cache::reserve_file }
	r.cleanup { Cache::cleanup }
end